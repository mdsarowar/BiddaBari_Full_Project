<?php

namespace App\Models\Backend\Course;

use App\Models\Scopes\Searchable;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Factories\HasFactory;

class CourseRoutine extends Model
{
    use HasFactory;
    use Searchable;

    protected $fillable = [
        'course_id',
        'day',
        'date_time',
        'date_time_timestamp',
        'room',
        'note',
        'status',
        'is_fack',
        'content_name',
    ];

    protected $searchableFields = ['*'];

    protected $table = 'course_routines';

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
    }

    protected static $courseRoutine;

    public static function createOrUpdateCourseRoutines ($request, $id = null)
    {
        CourseRoutine::updateOrCreate(['id' => $id], [
            'course_id'             => $request->course_id,
            'content_name'          => $request->content_name,
            'day'                   => $request->day,
            'date_time'             => $request->date_time,
            'date_time_timestamp'   => strtotime($request->date_time),
            'room'                  => $request->room,
            'note'                  => $request->note,
            'status'                => $request->status == 'on' ? 1 : 0,
            'is_fack'               => $request->is_fack == 'on' ? 1 : 0,
        ]);
    }

    public static function importCourseRoutine($course_routines, $courseId)
    {
        foreach ($course_routines as $course_routine)
        {
            $courseRoutine = new CourseRoutine();
            $courseRoutine->course_id             = $courseId;
            $courseRoutine->content_name          = $course_routine->content_name;
            $courseRoutine->day                   = $course_routine->day;
            $courseRoutine->date_time             = $course_routine->date_time;
            $courseRoutine->date_time_timestamp   = $course_routine->date_time;
            $courseRoutine->room                  = $course_routine->room;
            $courseRoutine->note                  = $course_routine->note;
            $courseRoutine->status                = $course_routine->status;
            $courseRoutine->is_fack               = $course_routine->is_fack;
            $courseRoutine->save();
        }
    }

    public function course()
    {
        return $this->belongsTo(Course::class);
    }
}
