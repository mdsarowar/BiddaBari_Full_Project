<?php

namespace App\Models\Backend\Course;

use App\Models\Backend\AdditionalFeatureManagement\SiteSeo;
use App\Models\Scopes\Searchable;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Factories\HasFactory;

class CourseCategory extends Model
{
    use HasFactory;
    use Searchable;

    protected $fillable = [
        'name',
        'parent_id',
        'note',
        'icon',
        'image',
        'meta_title',
        'meta_description',
        'slug',
        'order',
        'is_featured',
        'status',
    ];

    protected $searchableFields = ['*'];

    protected $table = 'course_categories';

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::deleting(function ($courseCategory){
            if (!empty($courseCategory->courses))
            {
                $courseCategory->courses()->detach();
            }
            if (!empty($courseCategory->siteSeos))
            {
                $courseCategory->siteSeos->each->delete();
            }
            if (!empty($courseCategory->courseCategoryParent))
            {
                $courseCategory->courseCategoryParent->each->delete();
            }
        });
    }

    protected static $courseCategory, $courseCategories;

    public static function createOrUpdateCourseCategory($request, $id = null)
    {
        CourseCategory::updateOrCreate(['id' => $id], [
            'name'          => $request->name,
            'parent_id'     => !empty($request->parent_id) ? $request->parent_id : (isset($id) ? static::find($id)->parent_id :  0),
            'note'          => $request->note,
            'icon'          => isset($id) ? imageUpload($request->file('icon'), 'course/course-icons/', 'course-category', '40', '40', static::find($id)->icon) : imageUpload($request->file('icon'), 'course/course-icons/', 'course-category', '40', '40'),
            'image'         => isset($id) ? imageUpload($request->file('image'), 'course/course-images/', 'course-category', '300', '300', static::find($id)->image) : imageUpload($request->file('image'), 'course/course-images/', 'course-category', '300', '300'),
            'slug'          => str_replace(' ', '-', $request->name),
            'order'         => isset($id) ? CourseCategory::find($id)->order : 1,
            'is_featured'   => $request->is_featured == 'on' ? 1 : 0,
            'status'        => $request->status == 'on' ? 1 : 0,
        ]);

    }

    public function courseCategoryParent()
    {
        return $this->belongsTo(CourseCategory::class, 'parent_id');
    }

    public function courseCategories()
    {
        return $this->hasMany(CourseCategory::class, 'parent_id');
    }
    public function courseCategoriesByOrderAsc()
    {
        return $this->hasMany(CourseCategory::class, 'parent_id')->orderBy('order', 'ASC');
    }

    public function courses()
    {
        return $this->belongsToMany(Course::class);
    }
    public function coursesDescOrder()
    {
        return $this->belongsToMany(Course::class)->orderBy('id', 'DESC');
    }
    public function siteSeos()
    {
        return $this->hasMany(SiteSeo::class, 'parent_model_id');
//        return $this->hasMany(SiteSeo::class, 'parent_model_id')->where('model_type', 'course_category');
    }
}
