<?php

namespace App\Models\Backend\ExamManagement;

use App\Models\Scopes\Searchable;
use App\Models\User;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Factories\HasFactory;

class ExamSubscriptionPackage extends Model
{
    use HasFactory;
    use Searchable;

    protected $fillable = [
        'name',
        'slug',
        'valid_form',
        'valid_to',
        'status',
        'price',
        'sell_qtn',
        'banner',
    ];

    protected $searchableFields = ['*'];

    protected $table = 'exam_subscription_packages';

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::deleting(function ($subscription) {
            if (file_exists($subscription->banner))
            {
                unlink($subscription->banner);
            }
            if (!empty($subscription->users))
            {
                $subscription->users()->detach();
            }
        });
    }

    protected static $examSubscriptionPackage;

    public static function updateOrCreateXmSubscriptionPackage($request, $id = null)
    {
        ExamSubscriptionPackage::updateOrCreate(['id' => $id], [
            'name'  => $request->name,
            'slug'  => str_replace(' ', '-', $request->name),
            'valid_form'    => $request->valid_form,
            'valid_to'  => $request->valid_to,
//            'status'    => $request->status,
            'price' => $request->price,
            'banner'    => imageUpload($request->file('banner'), 'xm-subscription-package/', 'xm-sub-pac-', 600, 600, isset($id) ? static::find($id)->banner : ''),
        ]);
    }

    public function subscriptionOrders()
    {
        return $this->hasMany(SubscriptionOrder::class);
    }

    public function users()
    {
        return $this->belongsToMany(User::class);
    }
}
